{"ast":null,"code":"var _jsxFileName = \"/Users/mariamagdalenacasas/Documents/GitHub/APP-BUDGET/budget-app/src/Context/FetchApiContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FetchApiContext = /*#__PURE__*/createContext();\nexport const FetchApiContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userEmail, setUserEmail] = useState();\n  const [userName, setUserName] = useState();\n  const [userLastName, setUserLastName] = useState();\n  const [password, setPassword] = useState();\n  const [repetPassword, setRepetPassword] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const navigate = useNavigate();\n  /* Fetch Login.............. */\n\n  const Login = async () => {\n    const handleClick = () => {\n      navigate(\"/home\");\n    };\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": userEmail,\n      \"password\": password\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    try {\n      fetch(\"http://localhost:3000/login\", requestOptions).then(response => {\n        return response;\n      }).then(result => {\n        if (result.status == 200) {\n          setErrorMessage(\"\");\n          result.json().then(token => {\n            localStorage.setItem(\"token\", `Bearer ${token}`);\n            handleClick();\n          });\n        } else {\n          result.json().then(message => {\n            setErrorMessage(message);\n          });\n        }\n      });\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  /* Fetch Registro.............. */\n\n\n  const SignIn = async () => {\n    const redirect = () => {\n      navigate(\"/\");\n    };\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", localStorage.getItem(\"token\"));\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"name\": userName,\n      \"lastName\": userLastName,\n      \"email\": userEmail,\n      \"password\": password\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    try {\n      fetch(\"http://localhost:3000/newUser\", requestOptions).then(response => response.json()).then(result => {\n        redirect();\n      }).catch(error => console.log('error', error));\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FetchApiContext.Provider, {\n    value: {\n      Login,\n      userEmail,\n      setUserEmail,\n      password,\n      setPassword,\n      userName,\n      setUserName,\n      userLastName,\n      setUserLastName,\n      SignIn,\n      repetPassword,\n      setRepetPassword,\n      errorMessage,\n      setErrorMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchApiContextProvider, \"V2AsNW1FnwyLxSVwMhLsC6D6fVc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FetchApiContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchApiContextProvider\");","map":{"version":3,"sources":["/Users/mariamagdalenacasas/Documents/GitHub/APP-BUDGET/budget-app/src/Context/FetchApiContext.jsx"],"names":["createContext","useEffect","useState","React","useNavigate","FetchApiContext","FetchApiContextProvider","children","userEmail","setUserEmail","userName","setUserName","userLastName","setUserLastName","password","setPassword","repetPassword","setRepetPassword","errorMessage","setErrorMessage","navigate","Login","handleClick","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","result","status","json","token","localStorage","setItem","message","error","SignIn","getItem","catch","console","log"],"mappings":"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","sourcesContent":["import { createContext, useEffect} from \"react\";\nimport {useState} from \"react\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const FetchApiContext = createContext()\n\nexport const FetchApiContextProvider = ({children})=>{\n  const [userEmail, setUserEmail] = useState();\n  const [userName, setUserName] = useState();\n  const [userLastName, setUserLastName] = useState();\n  const [password, setPassword]= useState();\n  const [repetPassword, setRepetPassword] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const navigate = useNavigate();\n  \n  \n  /* Fetch Login.............. */\n  const Login = async()=>{\n   const handleClick = () => {\n      navigate(\"/home\");\n    }\n\n  var myHeaders = new Headers();  \n  myHeaders.append(\"Content-Type\", \"application/json\");\n        \n  var raw = JSON.stringify({\n      \"email\": userEmail,\n      \"password\": password\n    });\n    \n  var requestOptions = {\n   method: 'POST',\n   headers: myHeaders,\n   body: raw,\n   redirect: 'follow'\n  };\n try {\n  fetch(\"http://localhost:3000/login\", requestOptions)\n\n  .then(response => {\n     return response\n  })\n  .then(result=>{\n    if(result.status == 200){\n      setErrorMessage(\"\")\n      result.json().then((token)=>{\n        localStorage.setItem(\"token\", `Bearer ${token}`)\n        handleClick() \n      })\n    }else{\n      result.json().then((message)=>{\n        setErrorMessage(message)\n      })\n    }\n  })\n } catch (error) {\n   setErrorMessage(error.message)}\n}\n\n\n\n\n\n\n\n /* Fetch Registro.............. */\nconst SignIn = async()=>{\n  const redirect = () => {\n    navigate(\"/\");\n  }\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", localStorage.getItem(\"token\"));\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  \n  var raw = JSON.stringify({\n    \"name\": userName,\n    \"lastName\": userLastName,\n    \"email\": userEmail,\n    \"password\": password,\n  });\n  \n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\ntry { \n\n\n  \n  fetch(\"http://localhost:3000/newUser\", requestOptions)\n    .then(response => response.json())\n    .then(result =>{redirect()} )\n    .catch(error => console.log('error', error));\n  \n} catch (error) {\n setErrorMessage(error.message)}\n\n}\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n return <FetchApiContext.Provider value={{Login,\n  userEmail, setUserEmail, password, setPassword,userName, setUserName,userLastName,\n   setUserLastName,SignIn,repetPassword, setRepetPassword,errorMessage, setErrorMessage}}>{children}\n    </FetchApiContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}