{"ast":null,"code":"var _jsxFileName = \"/Users/mariamagdalenacasas/Documents/GitHub/APP-BUDGET/budget-app/src/Context/FetchApiContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FetchApiContext = /*#__PURE__*/createContext();\nexport const FetchApiContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userEmail, setUserEmail] = useState();\n  const [userName, setUserName] = useState();\n  const [userLastName, setUserLastName] = useState();\n  const [password, setPassword] = useState();\n  const [repetPassword, setRepetPassword] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(\"/home\");\n  };\n  /* Fetch Login.............. */\n\n\n  const Login = async () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": userEmail,\n      \"password\": password\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    try {} catch (error) {\n      console.log(error);\n    }\n    /* Fetch Registro.............. */\n\n\n    const SignIn = async () => {\n      const redirect = () => {\n        navigate(\"/\");\n      };\n\n      try {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", localStorage.getItem(\"token\"));\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n          \"name\": userName,\n          \"lastName\": userLastName,\n          \"email\": userEmail,\n          \"password\": password\n        });\n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow'\n        };\n        fetch(\"http://localhost:3000/newUser\", requestOptions).then(response => response.json()).then(result => {\n          redirect();\n        }).catch(error => console.log('error', error));\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(FetchApiContext.Provider, {\n    value: {\n      Login,\n      userEmail,\n      setUserEmail,\n      password,\n      setPassword,\n      userName,\n      setUserName,\n      userLastName,\n      setUserLastName,\n      SignIn,\n      repetPassword,\n      setRepetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchApiContextProvider, \"V2AsNW1FnwyLxSVwMhLsC6D6fVc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FetchApiContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchApiContextProvider\");","map":{"version":3,"sources":["/Users/mariamagdalenacasas/Documents/GitHub/APP-BUDGET/budget-app/src/Context/FetchApiContext.jsx"],"names":["createContext","useEffect","useState","React","useNavigate","FetchApiContext","FetchApiContextProvider","children","userEmail","setUserEmail","userName","setUserName","userLastName","setUserLastName","password","setPassword","repetPassword","setRepetPassword","errorMessage","setErrorMessage","navigate","handleClick","Login","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","error","console","log","SignIn","localStorage","getItem","fetch","then","response","json","result","catch","message"],"mappings":"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","sourcesContent":["import { createContext, useEffect} from \"react\";\nimport {useState} from \"react\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const FetchApiContext = createContext()\n\nexport const FetchApiContextProvider = ({children})=>{\n  const [userEmail, setUserEmail] = useState();\n  const [userName, setUserName] = useState();\n  const [userLastName, setUserLastName] = useState();\n  const [password, setPassword]= useState();\n  const [repetPassword, setRepetPassword] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n     navigate(\"/home\");\n   }\n\n /* Fetch Login.............. */\n const Login = async()=>{\n\n  var myHeaders = new Headers();  \n  myHeaders.append(\"Content-Type\", \"application/json\");\n        \n  var raw = JSON.stringify({\n      \"email\": userEmail,\n      \"password\": password\n    });\n    \n  var requestOptions = {\n   method: 'POST',\n   headers: myHeaders,\n   body: raw,\n   redirect: 'follow'\n  };\n try {\n   \n } catch (error) {\n   console.log(error)\n}\n\n\n\n\n\n\n\n /* Fetch Registro.............. */\nconst SignIn = async()=>{\n  const redirect = () => {\n    navigate(\"/\");}\ntry {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", localStorage.getItem(\"token\"));\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  \n  var raw = JSON.stringify({\n    \"name\": userName,\n    \"lastName\": userLastName,\n    \"email\": userEmail,\n    \"password\": password,\n  });\n  \n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  \n  fetch(\"http://localhost:3000/newUser\", requestOptions)\n    .then(response => response.json())\n    .then(result =>{redirect()} )\n    .catch(error => console.log('error', error));\n  \n} catch (error) {\n  console.log(error.message);\n}\n\n}}\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n return <FetchApiContext.Provider value={{Login,\n  userEmail, setUserEmail, password, setPassword,userName, setUserName,userLastName,\n   setUserLastName,SignIn,repetPassword, setRepetPassword,}}>{children}\n    </FetchApiContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}