{"ast":null,"code":"var _jsxFileName = \"/Users/mariamagdalenacasas/Documents/GitHub/APP-BUDGET/budget-app/src/Context/FetchApiContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FetchApiContext = /*#__PURE__*/createContext();\nexport const FetchApiContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userEmail, setUserEmail] = useState();\n  const [userName, setUserName] = useState();\n  const [userLastName, setUserLastName] = useState();\n  const [password, setPassword] = useState();\n  const [repetPassword, setRepetPassword] = useState();\n  /* Fetch Login.............. */\n\n  const Login = async () => {\n    try {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"email\": userEmail,\n        \"password\": password\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:3000/login\", requestOptions).then(response => response.json()).then(result => {\n        localStorage.setItem(\"token\", `Bearer ${result.token}`);\n      }).catch(error => console.log('error', error));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  /* Fetch Registro.............. */\n\n\n  const SignIn = async () => {\n    try {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", localStorage.getItem(\"token\"));\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"name\": userName,\n        \"lastName\": userLastName,\n        \"email\": userEmail,\n        \"password\": password\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:3000/newUser\", requestOptions).then(response => response.json()).then(result => console.log(result)).catch(error => console.log('error', error));\n    } catch (error) {\n      throw new Error();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FetchApiContext.Provider, {\n    value: {\n      Login,\n      userEmail,\n      setUserEmail,\n      password,\n      setPassword,\n      userName,\n      setUserName,\n      userLastName,\n      setUserLastName,\n      SignIn,\n      repetPassword,\n      setRepetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchApiContextProvider, \"kq8eyiXqDtf33cq2WHA3eStkxTI=\");\n\n_c = FetchApiContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchApiContextProvider\");","map":{"version":3,"sources":["/Users/mariamagdalenacasas/Documents/GitHub/APP-BUDGET/budget-app/src/Context/FetchApiContext.jsx"],"names":["createContext","useEffect","useState","React","Redirect","FetchApiContext","FetchApiContextProvider","children","userEmail","setUserEmail","userName","setUserName","userLastName","setUserLastName","password","setPassword","repetPassword","setRepetPassword","Login","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","localStorage","setItem","token","catch","error","console","log","message","SignIn","getItem","Error"],"mappings":"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","sourcesContent":["import { createContext, useEffect} from \"react\";\nimport {useState} from \"react\";\nimport React from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\nexport const FetchApiContext = createContext()\n\nexport const FetchApiContextProvider = ({children})=>{\n  const [userEmail, setUserEmail] = useState();\n  const [userName, setUserName] = useState();\n  const [userLastName, setUserLastName] = useState();\n  const [password, setPassword]= useState();\n  const [repetPassword, setRepetPassword] = useState();\n\n /* Fetch Login.............. */\n const Login = async()=>{\n  try {\n    \n    var myHeaders = new Headers();\n      \n    myHeaders.append(\"Content-Type\", \"application/json\");\n          \n    var raw = JSON.stringify({\n        \"email\": userEmail,\n        \"password\": password\n      });\n      \n    var requestOptions = {\n     method: 'POST',\n     headers: myHeaders,\n     body: raw,\n     redirect: 'follow'\n    };\n          \n    fetch(\"http://localhost:3000/login\", requestOptions)\n    .then(response => response.json())\n    .then(result => {localStorage.setItem(\"token\", `Bearer ${result.token}`,)})\n    .catch(error => console.log('error', error));\n          \n    \n    } catch (error) {\n        console.log(error.message);\n    }\n    \n }\n\n /* Fetch Registro.............. */\n const SignIn = async()=>{\n   try {\n     var myHeaders = new Headers();\n     myHeaders.append(\"Authorization\", localStorage.getItem(\"token\"));\n     myHeaders.append(\"Content-Type\", \"application/json\");\n     \n     var raw = JSON.stringify({\n       \"name\": userName,\n       \"lastName\": userLastName,\n       \"email\": userEmail,\n       \"password\": password,\n     });\n     \n     var requestOptions = {\n       method: 'POST',\n       headers: myHeaders,\n       body: raw,\n       redirect: 'follow'\n     };\n     \n     fetch(\"http://localhost:3000/newUser\", requestOptions)\n       .then(response => response.json())\n       .then(result => console.log(result))\n       .catch(error => console.log('error', error));\n     \n   } catch (error) {\n     throw new Error()\n   }\n }\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n return <FetchApiContext.Provider value={{Login, userEmail, setUserEmail, password, setPassword,userName, setUserName,userLastName, setUserLastName,SignIn,repetPassword, setRepetPassword}}>{children}\n    </FetchApiContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}